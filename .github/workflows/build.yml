name: Build

on: [ push, pull_request ]

jobs:
  check_duplicate_workflows:
    name: Check for duplicate workflows
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          skip_after_successful_duplicate: 'true'
          concurrent_skipping: 'same_content'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
          paths_ignore: '["**/*.md"]'

  build-mirai-core:

    runs-on: ${{ matrix.platform }}
    needs: [ check_duplicate_workflows ]
    if: ${{ needs.check_duplicate_workflows.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        java: [ '8', '11', '15' ]
        platform: [ 'windows-latest', 'ubuntu-latest' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Cache Gradle packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ matrix.java }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: chmod -R 777 *
        run: chmod -R 777 *

      - name: Init gradle project
        run: ./gradlew clean --scan

      - name: Build mirai-core series
        run: ./gradlew assemble "-Pmirai.pkc.check.enable" --scan

      - name: mirai-core Tests
        run: ./gradlew check "-Pmirai.pkc.check.enable" --scan

  build-all:

    runs-on: ${{ matrix.platform }}
    needs: [ check_duplicate_workflows ]
    if: ${{ needs.check_duplicate_workflows.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        java: [ '8', '11', '15' ]
        platform: [ 'windows-latest', 'ubuntu-latest' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}

      - name: Cache Gradle packages
        uses: actions/cache@v2.1.5
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ matrix.java }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: chmod -R 777 *
        run: chmod -R 777 *

      - name: Init gradle project
        run: ./gradlew clean --scan

      - name: Build all
        run: ./gradlew assemble "-Pmirai.pkc.check.enable" --scan

      - name: All Tests
        run: ./gradlew check "-Pmirai.pkc.check.enable" --scan
